%% -*- mode: erlang -*-

{erl_opts, [debug_info]}.
{deps, [
    {ecpool, {git, "https://github.com/emqx/ecpool.git", {tag, "0.5.3"}}},
    {grpc, {git, "https://github.com/emqx/grpc-erl", {tag, "0.6.12"}}},
    {ezstd, {git, "https://github.com/emqx/ezstd.git", {tag, "v1.0.5-emqx1"}}},
    {snabbkaffe, {git, "https://github.com/kafka4beam/snabbkaffe.git", {tag, "1.0.8"}}}
]}.

{plugins, [
    {grpc_plugin, {git, "https://github.com/HJianBo/grpc_plugin", {tag, "v0.10.1"}}},
    erlfmt
]}.

{profiles, [
    {test, [
        {erl_opts, [debug_info]},
        {cover_enabled, true},
        {ct_opts, [{sys_config, ["config/sys.config"]}]},
        {deps, [
            {ecpool, {git, "https://github.com/emqx/ecpool.git", {tag, "0.5.5"}}},
            {grpc, {git, "https://github.com/emqx/grpc-erl", {tag, "0.6.12"}}},
            {ezstd, {git, "https://github.com/emqx/ezstd.git", {tag, "v1.0.5-emqx1"}}},
            {timing, {git, "https://github.com/lpgauth/timing.git", {tag, "0.1.3"}}},
            {snabbkaffe, {git, "https://github.com/kafka4beam/snabbkaffe.git", {tag, "1.0.8"}}},
            {jiffy, {git, "https://github.com/emqx/jiffy", {tag, "1.0.5"}}},
            {meck, "0.9.2"}
        ]},
        {plugins, [
            coveralls,
            {grpc_plugin, {git, "https://github.com/HJianBo/grpc_plugin", {tag, "v0.10.1"}}},
            erlfmt,
            rebar3_path_deps
        ]}
    ]},
    {dev, [
        {erl_opts, [debug_info]},
        {extra_src_dirs, ["examples"]},
        {deps, [
            {ecpool, {git, "https://github.com/emqx/ecpool.git", {tag, "0.5.5"}}},
            {grpc, {path, "../grpc-erl"}},
            {ezstd, {git, "https://github.com/emqx/ezstd.git", {tag, "v1.0.5-emqx1"}}},
            {timing, {git, "https://github.com/lpgauth/timing.git", {tag, "0.1.3"}}},
            {snabbkaffe, {git, "https://github.com/kafka4beam/snabbkaffe.git", {tag, "1.0.8"}}},
            {jiffy, {git, "https://github.com/emqx/jiffy", {tag, "1.0.5"}}}
        ]},
        {plugins, [
            rebar3_path_deps
        ]}
    ]}
]}.

{erlfmt, [
    write,
    {exclude_files, [
        "src/hstreamdb_api.erl",
        "src/hstream_server_h_stream_api_bhvr.erl",
        "src/hstream_server_h_stream_api_client.erl"
    ]},
    {files, [
        "src/*.erl",
        "test/*.erl",
        "include/*.hrl",
        "rebar.config",
        "rebar.config.*",
        "examples/*.erl"
    ]}
]}.

{grpc, [
    {type, all},
    {protos, ["protocol/"]},
    {out_dir, "src/"},
    {gpb_opts, [{type_specs, false}, {module_name, "hstreamdb_api"}]}
]}.

{shell, [
    {apps, [hstreamdb_erl]}
]}.

{provider_hooks, [
    {pre, [
        {compile, {grpc, gen}},
        {clean, {grpc, clean}}
    ]}
]}.

{cover_enabled, true}.
{cover_export_enabled, true}.
{coveralls_service_name, "github"}.
{coveralls_coverdata, "_build/test/cover/*.coverdata"}.

{xref_checks, [
    undefined_function_calls,
    undefined_functions,
    locals_not_used,
    deprecated_function_calls,
    warnings_as_errors,
    deprecated_functions
]}.

{xref_ignores, [
    hstreamdb_api, hstream_server_h_stream_api_bhvr, hstream_server_h_stream_api_client
]}.

{dialyzer, [
    {warnings, [unmatched_returns, error_handling]},
    {plt_location, "."},
    {plt_prefix, "hstreamdb_erl_dialyzer"},
    {plt_apps, all_apps},
    {statistics, true}
]}.

{cover_excl_mods, [
    %% these modules are automatically generated by grpc plugin
    hstreamdb_api,
    hstream_server_h_stream_api_bhvr,
    hstream_server_h_stream_api_client
]}.

{alias, [
    {'dev-shell', [{upgrade, "grpc"}, shell]}
]}.
